# Generated by Django 4.2.7 on 2023-11-19 19:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
                ("profile_info", models.TextField(blank=True, null=True)),
                ("social_links", models.URLField(blank=True, null=True)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "banned_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="iam_banned_by_authors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cooperated_authors",
                    models.ManyToManyField(blank=True, to="base.authorprofile"),
                ),
                (
                    "followers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="user_following_authors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chapter_number", models.IntegerField()),
                ("volume_number", models.IntegerField()),
                ("date_of_publish", models.DateField()),
                ("title", models.CharField(max_length=255)),
                (
                    "chapter_type",
                    models.CharField(
                        choices=[
                            ("prologue", "Prologue"),
                            ("epilogue", "Epilogue"),
                            ("normal", "Normal"),
                            ("one-shot", "One-shot"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("likes", models.IntegerField(default=0)),
                ("dislikes", models.IntegerField(default=0)),
                ("is_spoiler", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("denied", "Denied"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="Content",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("book", "Book"),
                            ("manga", "Manga"),
                            ("comic", "Comic"),
                            ("ranobe", "Ranobe"),
                        ],
                        max_length=20,
                    ),
                ),
                ("original_author", models.CharField(max_length=255)),
                ("original_name", models.CharField(max_length=255)),
                ("date_of_publish", models.DateField()),
                (
                    "publish_status",
                    models.CharField(
                        choices=[
                            ("ongoing", "Ongoing"),
                            ("stopped", "Stopped"),
                            ("announced", "Announced"),
                            ("finished", "Finished"),
                            ("paused", "Paused"),
                        ],
                        max_length=20,
                    ),
                ),
                ("overall_rating", models.FloatField(default=0.0)),
                ("genre", models.CharField(max_length=50)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_new", models.BooleanField(default=False)),
                ("is_reading_now", models.BooleanField(default=False)),
                ("last_updated", models.DateField()),
                ("author_recommendation", models.TextField(blank=True, null=True)),
                ("is_recommended", models.BooleanField(default=False)),
                ("week_top", models.BooleanField(default=False)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                (
                    "chapters",
                    models.ManyToManyField(
                        blank=True, related_name="content_chapters", to="base.chapter"
                    ),
                ),
                (
                    "comments",
                    models.ManyToManyField(
                        blank=True, related_name="content_comments", to="base.comment"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.authorprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="content_pages/")),
                ("ordering", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["ordering"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("username", models.CharField(max_length=30, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("normal", "Normal"),
                            ("author", "Author"),
                            ("admin", "Admin"),
                        ],
                        max_length=20,
                    ),
                ),
                ("permissions", models.TextField()),
                (
                    "profile_picture",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
                ("profile_info", models.TextField(blank=True, null=True)),
                (
                    "banned_by_authors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="author_banned_users",
                        to="base.authorprofile",
                    ),
                ),
                (
                    "following_authors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="author_followers",
                        to="base.authorprofile",
                    ),
                ),
                (
                    "friends",
                    models.ManyToManyField(
                        blank=True, related_name="friends", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReadingHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.content"
                    ),
                ),
                (
                    "last_read_chapter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.chapter",
                    ),
                ),
                (
                    "last_read_page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.page",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[("unread", "Unread"), ("read", "Read")], max_length=20
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="comment",
            name="content",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="base.content"
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="chapter",
            name="content",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="base.content"
            ),
        ),
        migrations.AddField(
            model_name="chapter",
            name="pages",
            field=models.ManyToManyField(blank=True, to="base.page"),
        ),
    ]
